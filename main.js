!function(){"use strict";class e{constructor(e,t,r,s,o){this._name=t.name,this._link=t.link,this._id=t._id,this._isLiked=t.isLiked,this._cardSelector=e,this.handleCardClick=r,this.handleCardDelete=s,this.handleCardLike=o}_handleLikeButton(){this._cardElement.querySelector(".gallery__like-button").classList.toggle("gallery__like-button_active")}toggleLike(){this._handleLikeButton()}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}deleteCard(){this._handleDeleteButton()}getTemplate(){return this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".gallery__card").cloneNode(!0),this._cardElement.querySelector(".gallery__title").textContent=this._name,this._cardElement.querySelector(".gallery__image").src=this._link,this._cardElement.querySelector(".gallery__image").alt=this._name,this._cardElement.id=this._id,this._isLiked&&this._cardElement.querySelector(".gallery__like-button").classList.add("gallery__like-button_active"),this._setEventListeners(),this._cardElement}_setEventListeners(){this._cardElement.querySelector(".gallery__like-button").addEventListener("click",(()=>{this.handleCardLike(this)})),this._cardElement.querySelector(".gallery__delete-button").addEventListener("click",(()=>{this.handleCardDelete(this)})),this._cardElement.querySelector(".gallery__image").addEventListener("click",(()=>{this.handleCardClick(this._name,this._link)}))}}var t=class{constructor(e,t){this._formEl=t,this._inputEl=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_setEventListeners(){this._inputEls=Array.from(this._formEl.querySelectorAll(this._inputEl)),this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_showInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formEl.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e,t){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e,t)}toggleButtonState(){let e=!1;if(this._inputEls.forEach((t=>{t.validity.valid||(e=!0)})),e)return this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0;this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}enableValidation(){this._setEventListeners(),this._formEl.addEventListener("submit",(e=>{e.preventDefault()}))}};class r{constructor(e){this._modal=document.querySelector(e),this._closeButton=this._modal.querySelector(".modal__close-button")}openPopup(){this._modal.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}closePopup(){this._modal.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.closePopup()};setEventListeners(){this._modal.addEventListener("mousedown",(e=>{e.target===this._modal&&this.closePopup()})),this._closeButton.addEventListener("click",(()=>{this.closePopup()}))}}class s extends r{constructor(e,t){super(e),this._handleFormSubmit=t,this._submitButton=this._modal.querySelector(".modal__submit-button"),this._formEl=this._modal.querySelector(".modal__form"),this._inputEls=this._formEl.querySelectorAll(".modal__input")}closePopup(){this._formEl.reset(),super.closePopup()}handleButtonLoading(e){this._submitButton.textContent=e?"Saving...":"Save"}_getInputValues(){return this._inputValues={},this._inputEls.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){this._formEl.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}}const o={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputErrorClass:"modal__error_visible",errorClass:"modal__error"},i=document.querySelector("#profile-edit-button"),n=document.querySelector("#profile-edit-modal"),l=(document.querySelector("#modal-edit-close-button"),document.querySelector(".profile__title")),a=document.querySelector(".profile__description"),c=document.querySelector("#profile-title-input"),d=document.querySelector("#profile-description-input"),u=(document.querySelector("#modal-edit-form"),document.querySelector(".profile__image")),h=document.querySelector("#profile-picture-modal"),_=document.querySelector(".profile__edit-image-button"),m=(document.querySelector(".modal__close-button"),document.querySelector("#profile-add-modal")),p=document.querySelector("#profile-add-button"),E=(document.querySelector("#modal-add-form"),document.querySelector("#card-title-input"),document.querySelector("#card-url-input"),document.querySelector("#modal-image-close-button"),document.querySelector(".gallery__cards"),document.querySelector(".gallery__delete-button"),document.querySelector("#confirm-modal"),document.querySelector(".modal-confirm__submit-button"),document.querySelector(".gallery__like-button"),document.querySelector(".modal").querySelector(".modal__submit-button"),new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getProfileData(){return fetch(`${this._baseUrl}/v1/users/me`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}getInitialCards(){return fetch(`${this._baseUrl}/v1/cards`,{method:"GET",headers:this._headers}).then((e=>this._checkResponse(e)))}editProfile(e,t){return fetch(`${this._baseUrl}/v1/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then((e=>this._checkResponse(e)))}editProfilePic(e){return fetch(`${this._baseUrl}/v1/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>this._checkResponse(e)))}createNewCard(e,t){return fetch(`${this._baseUrl}/v1/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then((e=>this._checkResponse(e)))}deleteApiCard(e){return fetch(`${this._baseUrl}/v1/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}addLike(e){return fetch(`${this._baseUrl}/v1/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((e=>this._checkResponse(e)))}removeLike(e){return fetch(`${this._baseUrl}/v1/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((e=>this._checkResponse(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com",headers:{authorization:"177c16b7-240f-4206-a2e5-5bd359c96b1d","Content-Type":"application/json"}})),v=new class extends r{constructor(e){super(e),this._confirmDeleteButton=this._modal.querySelector(".modal-confirm__submit-button"),this._submitButton=this._modal.querySelector(".modal__submit-button")}handleConfirm(e){this._handleConfirmDelete=e}handleButtonLoading(){this._submitButton.textContent="Saving...",setTimeout((()=>{this._submitButton.textContent="Save"}),1e3)}setEventListeners(){this._confirmDeleteButton.addEventListener("click",(()=>{this._handleConfirmDelete()})),super.setEventListeners()}}("#confirm-modal");function y(t){return new e("#card-template",t,B,(function(e){v.openPopup(),v.handleConfirm((function(){v.handleButtonLoading(!0);const r=t._id;E.deleteApiCard(r).then((()=>{e.deleteCard(),v.closePopup(),v.handleButtonLoading(!1)})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))))}))}),(function(e){const r=t._id;!1===t.isLiked?E.addLike(r).then((()=>{e.toggleLike(),t.isLiked=!0})).catch((e=>(console.error("An error occured:",e),Promise.reject(e)))):E.removeLike(r).then((()=>{e.toggleLike(),t.isLiked=!1})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))))})).getTemplate()}v.setEventListeners();const g=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=y(e);g.addItem(t)}},".gallery__cards");E.getInitialCards().then((e=>{g.renderItems(e.reverse())})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))));const f=new t(o,n);f.enableValidation();const b=new t(o,m);b.enableValidation();const S=new t(o,h);S.enableValidation();const L=new class{constructor(e,t,r){this._userTitle=e,this._userDescription=t,this._userAvatar=r}getUserInfo(){return{userTitle:this._userTitle.textContent,userDescription:this._userDescription.textContent}}setUserInfo(e){let{userTitle:t,userDescription:r}=e;this._userTitle.textContent=t,this._userDescription.textContent=r}setUserAvatar(e){this._userAvatar.src=e}}(l,a,u),k=new s("#profile-edit-modal",(e=>{k.handleButtonLoading(!0),E.editProfile(e.name,e.description).then((e=>{L.setUserInfo({userTitle:e.name,userDescription:e.about}),k.closePopup(),k.handleButtonLoading(!1),f.toggleButtonState()})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))))}));k.setEventListeners(),i.addEventListener("click",(()=>{const e=L.getUserInfo();c.value=e.userTitle,d.value=e.userDescription,f.toggleButtonState(),k.openPopup()})),E.getProfileData().then((e=>{L.setUserInfo({userTitle:e.name,userDescription:e.about}),L.setUserAvatar(e.avatar)})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))));const C=new s("#profile-add-modal",(e=>{C.handleButtonLoading(!0),E.createNewCard(e.title,e.link).then((e=>{const t=y(e);g.addItem(t),C.closePopup(),C.handleButtonLoading(!1),b.toggleButtonState()})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))))}));p.addEventListener("click",(()=>{C.openPopup()})),C.setEventListeners();const q=new class extends r{constructor(e){super(e),this._modalImage=this._modal.querySelector(".modal__image-preview"),this._modalImageText=this._modal.querySelector(".modal__image-text")}openPopup(e,t){this._modalImage.src=t,this._modalImage.alt=e,this._modalImageText.textContent=e,super.openPopup()}}("#image-modal");function B(e,t){q.openPopup(e,t)}q.setEventListeners();const P=new s("#profile-picture-modal",(e=>{P.handleButtonLoading(!0),E.editProfilePic(e.link).then((e=>{L.setUserAvatar(e.avatar),P.closePopup(),P.handleButtonLoading(!1),S.toggleButtonState()})).catch((e=>(console.error("An error occured:",e),Promise.reject(e))))}));P.setEventListeners(),_.addEventListener("click",(()=>{S.toggleButtonState(),P.openPopup()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,